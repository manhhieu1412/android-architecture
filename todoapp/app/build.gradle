apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: '../config/quality/quality.gradle'

def cfg = rootProject.ext.configuration
def minSdk = hasProperty('minSdk') ? minSdk : cfg.minSdk

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        def libs = rootProject.ext.libraries
        classpath libs.kotlin_gradle_plugin
    }
}

android {
    compileSdkVersion cfg.compileVersion
    buildToolsVersion cfg.buildToolsVersion
    defaultConfig {
        applicationId cfg.applicationId
        minSdkVersion minSdk
        targetSdkVersion cfg.targetSdk
        versionCode 1
        versionName "1.0.0"
        resConfigs "en"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    def tests = rootProject.ext.testingLibraries
    def libs = rootProject.ext.libraries

    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile(tests.espresso_core, {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })

    compile libs.support_appcompat_v7
    compile libs.constraint_layout
    compile libs.kotlin
    testCompile tests.junit
    compile libs.retrofit
    compile libs.retrofit_adapter
    compile libs.retrofit_converter

    compile libs.okhttp
    compile libs.rxjava
    compile libs.rxandroid

    compile libs.timber
    compile libs.eventbus
    compile libs.gson
    compile libs.epoxy

    compile libs.conductor
    compile libs.conductor_rxlifecycle2

}
